name: Challenging CI
on:
  push:

jobs:
  microservice-actions:
    strategy:
      matrix:
        service: [microservice_a,microservice_b,microservice_c]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build
        uses: docker/build-push-action@v4
        with:
          load: true
          context: "${{ matrix.service }}"
          file: "${{ matrix.service }}/Dockerfile"
          tags: ${{ secrets.REPOSITORY }}:${{ matrix.service }}-latest,${{ secrets.REPOSITORY }}:${{ matrix.service }}-${{ github.run_number }}

      - name: Run and test container
        run: |
          docker run -d -p 8080:8080 ${{ secrets.REPOSITORY }}:${{ matrix.service }}-latest
          sleep 1
          status=$(python test_suite.py http://localhost:8080)
          if [[ $status == 'ERROR' ]]
          then exit 1
          fi
          echo ::set-output name=status::$status

      - name: Login to Docker Hub   
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "${{ matrix.service }}"
          file: "${{ matrix.service }}/Dockerfile"
          tags: ${{ secrets.REPOSITORY }}:${{ matrix.service }}-latest,${{ secrets.REPOSITORY }}:${{ matrix.service }}-${{ github.run_number }}            